clusterName: &cluster ${clusterName}
# renovate: datasource=github-releases depName=siderolabs/talos
talosVersion: "v1.9.1"
# renovate: datasource=github-releases depName=siderolabs/kubelet
kubernetesVersion: "v1.32.0"

endpoint: https://${clusterEndpointIP}:6443
allowSchedulingOnMasters: true

cniConfig:
  name: none

additionalApiServerCertSans: &sans
  - "127.0.0.1"  #kubeprism

additionalMachineCertSans: *sans

nodes:
  - hostname: k8s-0
    ipAddress: 192.168.1.120
    controlPlane: true
    installDiskSelector:
      model: KingFast
    networkInterfaces: &networkInterfaces
      - deviceSelector:
          driver: e1000e
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    schematic: &schematic
      customization:
        extraKernelArgs:
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/i915
            - siderolabs/intel-ucode
            
  - hostname: k8s-1
    ipAddress: 192.168.1.183
    controlPlane: true
    installDiskSelector:
      model: CT500MX500SSD1
    networkInterfaces: *networkInterfaces
    schematic: *schematic
  
  - hostname: k8s-2
    ipAddress: 192.168.1.149
    controlPlane: true
    installDiskSelector:
      model: KINGSTON SA400S3
    networkInterfaces: *networkInterfaces
    schematic: &schematic

controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: control-plane

  patches:
    # Disable search domain everywhere
    - &disableSearchDomainsPatch |-
      machine:
        network:
          disableSearchDomain: true

    # Disable Host DNS
    - &hostDnsPatch |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Configure NTP
    - &ntpPatch |-
      machine:
        time:
          disabled: false
          servers:
            - time.cloudflare.com

    # Enable KubePrism
    - &kubePrismPatch |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    - &discoveryPatch |-
      cluster:
        discovery:
          enabled: true
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true

    # Configure containerd
    - &containerdPatch |-
      machine:
        files:
          - op: create
            path: /etc/cri/conf.d/20-customization.part
            content: |-
              [plugins."io.containerd.grpc.v1.cri"]
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
              [plugins."io.containerd.grpc.v1.cri".containerd]
                discard_unpacked_layers = false
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                discard_unpacked_layers = false

    - &sysctlPatch |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576
          fs.inotify.max_user_instances: 8192
          kernel.randomize_va_space: 0
          net.core.netdev_max_backlog: 30000
          net.core.rmem_max: 67108864
          net.core.wmem_max: 67108864
          net.ipv4.tcp_rmem: 4096 87380 33554432
          net.ipv4.tcp_wmem: 4096 65536 33554432
          net.ipv4.tcp_tw_reuse: 1
          net.ipv4.tcp_window_scaling: 1

    # Kubelet configuration
    - &kubeletPatch |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true
            rotate-server-certificates: "true"
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets:
                - 192.168.1.0/24

    # Configure cluster loopback
    # - |-
    #   machine:
    #     network:
    #       extraHostEntries:
    #         - ip: ${clusterEndpointIP}
    #           aliases:
    #             - ${clusterName}.chestr.dev

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        proxy:
          disabled: true
        coreDNS:
          disabled: false

    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 192.168.1.0/24
    - |-
      cluster:
        extraManifests:
          - # renovate: datasource=github-releases depName=kubernetes-sigs/gateway-api
            https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/experimental-install.yaml
          - # renovate: datasource=github-releases depName=prometheus-operator/prometheus-operator
            https://github.com/prometheus-operator/prometheus-operator/releases/download/v0.81.0/stripped-down-crds.yaml

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    # - |-
    #   machine:
    #     features:
    #       kubernetesTalosAPIAccess:
    #         enabled: true
    #         allowedRoles:
    #           - os:admin
    #         allowedKubernetesNamespaces:
    #           - kube-system

    

worker:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: worker

  # extensionServices: *extensionServices
  patches:
    - *disableSearchDomainsPatch
    - *hostDnsPatch
    - *ntpPatch
    - *kubePrismPatch
    - *containerdPatch
    - *discoveryPatch
    - *kubeletPatch
    - *sysctlPatch

    # Configure local-path CSI directory
    # - |-
    #   machine:
    #     kubelet:
    #       extraMounts:
    #         - destination: /var/localpath
    #           type: bind
    #           source: /var/localpath
    #           options:
    #             - rbind
    #             - rshared
    #             - rw